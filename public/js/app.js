// Generated by CoffeeScript 1.6.3
(function() {
  var app;

  app = angular.module('app', ['ngResource', 'ui.highlight']);

  app.config(function($interpolateProvider, $locationProvider, $routeProvider) {
    $interpolateProvider.startSymbol('[[').endSymbol(']]');
    $locationProvider.html5Mode(false).hashPrefix('!');
    return $routeProvider.when('/login', {
      templateUrl: '/template/login.html',
      controller: 'LoginController'
    }).when('/', {
      templateUrl: '/template/home.html',
      controller: 'HomeController'
    }).when('/item', {
      templateUrl: '/template/item/list.html',
      controller: 'ItemController'
    }).when('/item/new', {
      templateUrl: '/template/item/new.html',
      controller: 'ItemController'
    }).when('/item/:id', {
      templateUrl: function(params) {
        return '/template/item/edit.html';
      },
      controller: 'ItemController'
    }).otherwise({
      redirectTo: '/'
    });
  });

  app.run(function($rootScope, $location, AuthenticationService) {
    var routesThatRequireAuth;
    routesThatRequireAuth = ['/', '/item'];
    return $rootScope.$on('$routeChangeStart', function(event, next, current) {
      if (_.contains(routesThatRequireAuth, $location.path()) && !AuthenticationService.isLoggedIn()) {
        return $location.path('/login');
      }
    });
  });

  app.factory('SessionService', function() {
    return {
      get: function(key) {
        return sessionStorage.getItem(key);
      },
      set: function(key, val) {
        return sessionStorage.setItem(key, val);
      },
      unset: function(key) {
        return sessionStorage.removeItem(key);
      }
    };
  });

  app.factory('AuthenticationService', function($location, $http, SessionService) {
    return {
      login: function(credentials) {
        return $http.post('/auth/login', credentials).success(function() {
          return SessionService.set('authenticated', true);
        });
      },
      logout: function() {
        return $http.get('/auth/logout').success(function() {
          return SessionService.unset('authenticated');
        });
      },
      isLoggedIn: function() {
        return SessionService.get('authenticated');
      }
    };
  });

  app.filter('rupiah', function() {
    return function(string) {
      if (string) {
        return accounting.formatMoney(parseInt(string), 'Rp ', '.', '.') + ',-';
      } else {
        return '-';
      }
    };
  });

  app.directive('activeLink', function($location) {
    return {
      restrict: 'A',
      link: function(scope, element, attribute, controller) {
        var path;
        path = element.children('a').attr('href').slice(3);
        scope.location = $location;
        return scope.$watch('location.path()', function(newPath) {
          newPath = '/' + newPath.split('/')[1];
          if (path === newPath) {
            return element.addClass('active');
          } else {
            return element.removeClass('active');
          }
        });
      }
    };
  });

  app.controller('MenuController', function($scope, $location, AuthenticationService) {
    $scope.isLoggedIn = function() {
      return AuthenticationService.isLoggedIn();
    };
    return $scope.logout = function() {
      return AuthenticationService.logout().success(function() {
        return $location.path('/login');
      });
    };
  });

  app.controller('LoginController', function($scope, $location, AuthenticationService) {
    $scope.credentials = {
      username: '',
      password: ''
    };
    return $scope.login = function() {
      return AuthenticationService.login($scope.credentials).success(function() {
        return $location.path('/home');
      }).error(function(message) {
        return $scope.flash = message.flash;
      });
    };
  });

}).call(this);
